version: '3'

services:
  newrelic-agent:
    container_name: newrelic-infra
    build:
      context: newrelic-infra
      dockerfile: newrelic-infra.dockerfile
    cap_add:
      - SYS_PTRACE
    network_mode: host
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped
    environment:
      - MY_NEWRELIC_LICENSE_KEY
  catalog-server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        workspace: catalog-server
    ports:
      - ${CATALOG_SERVER_PORT}:80
    restart: always
    environment:
      - ENV
      - HOST
      - MONGO_URL
      - REDIS_URL
      - SPOTIFY_CLIENT_ID
      - SPOTIFY_CLIENT_SECRET
      - NEW_RELIC_LICENSE_KEY=${MY_NEWRELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=catalog-server

  crawler:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        workspace: crawler
    ports:
      - ${CRAWLER_SERVER_PORT}:80
    restart: always
    environment:
      - ENV
      - FILE_SERVER_URL
      - REDIS_URL
      - MONGO_URL
      - PROXY_HOST
      - PROXY_PORT
      - PROXY_USERNAME
      - PROXY_PASSWORD
      - COOL_DOWN_SECONDS
      - NEW_RELIC_LICENSE_KEY=${MY_NEWRELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=crawler

  file-parser:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        workspace: file-parser
    restart: always
    environment:
      - ENV
      - FILE_SERVER_URL
      - RYM_DATA_SERVER_URL
      - CRAWLER_SERVER_URL
      - RYM_LOOKUP_SERVER_URL
      - MONGO_URL
      - REDIS_URL
      - NEW_RELIC_LICENSE_KEY=${MY_NEWRELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=file-parser
    
  file-server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        workspace: file-server
    ports:
      - ${FILE_SERVER_PORT}:80
    restart: always
    environment:
      - ENV
      - LOCAL_BUCKET_PATH
      - REDIS_URL
      - FILE_TTL_SECONDS
      - MONGO_URL
      - SPACES_KEY
      - SPACES_SECRET
      - SPACES_BUCKET
      - NEW_RELIC_LICENSE_KEY=${MY_NEWRELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=file-server

  profile-server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        workspace: profile-server
    ports:
      - ${PROFILE_SERVER_PORT}:80
    restart: always
    environment:
      - ENV
      - RYM_DATA_SERVER_URL
      - CRAWLER_SERVER_URL
      - CATALOG_SERVER_URL
      - RYM_LOOKUP_SERVER_URL
      - MONGO_URL
      - MONGO_DB_NAME
      - NEW_RELIC_LICENSE_KEY=${MY_NEWRELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=profile-server

  rym-data-server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        workspace: rym-data-server
    ports:
      - ${RYM_DATA_SERVER_PORT}:80
    restart: always
    environment:
      - ENV
      - MONGO_URL
      - MONGO_DB_NAME
      - NEW_RELIC_LICENSE_KEY=${MY_NEWRELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=rym-data-server

  rym-lookup-server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        workspace: rym-lookup-server
    ports:
      - ${RYM_LOOKUP_SERVER_PORT}:80
    restart: always
    environment:
      - ENV
      - MONGO_URL
      - CRAWLER_SERVER_URL
      - REDIS_URL
      - NEW_RELIC_LICENSE_KEY=${MY_NEWRELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=rym-lookup-server
  
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
      args:
        workspace: dashboard
    command: npx turbo run start --filter=dashboard
    ports:
      - ${DASHBOARD_PORT}:80
    restart: always
    environment:
      - ENV
      - CRAWLER_SERVER_URL
      - PROFILE_SERVER_URL
      - CATALOG_SERVER_URL
      - REDIS_URL
      - PORT=80
      - NEW_RELIC_LICENSE_KEY=${MY_NEWRELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=dashboard