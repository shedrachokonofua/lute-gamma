version: '3'

services:
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    logging:
      driver: "none"

  mongodb:
    image: 'bitnami/mongodb:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 27017:27017
    logging:
      driver: "none"

  catalog-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: prebuild
      args:
        workspace: catalog-server
    command: npx turbo run dev --filter=catalog-server
    ports:
      - ${CATALOG_SERVER_PORT}:80
    restart: always
    volumes:
      - ./packages/@lute:/app/packages/@lute
      - ./apps/catalog-server:/app/apps/catalog-server
    environment:
      - ENV
      - HOST
      - MONGO_URL
      - REDIS_URL
      - SPOTIFY_CLIENT_ID
      - SPOTIFY_CLIENT_SECRET

  crawler:
    build:
      context: .
      dockerfile: Dockerfile
      target: prebuild
      args:
        workspace: crawler
    command: npx turbo run dev --filter=crawler
    ports:
      - ${CRAWLER_SERVER_PORT}:80
    restart: always
    volumes:
      - ./packages/@lute:/app/packages/@lute
      - ./apps/crawler:/app/apps/crawler
    environment:
      - ENV
      - FILE_SERVER_URL
      - REDIS_URL
      - MONGO_URL
      - PROXY_HOST
      - PROXY_PORT
      - PROXY_USERNAME
      - PROXY_PASSWORD
      - COOL_DOWN_SECONDS


  file-parser:
    build:
      context: .
      dockerfile: Dockerfile
      target: prebuild
      args:
        workspace: file-parser
    command: npx turbo run dev --filter=file-parser
    restart: always
    volumes:
      - ./packages/@lute:/app/packages/@lute
      - ./apps/file-parser:/app/apps/file-parser
    environment:
      - ENV
      - FILE_SERVER_URL
      - RYM_DATA_SERVER_URL
      - CRAWLER_SERVER_URL
      - RYM_LOOKUP_SERVER_URL
      - MONGO_URL
      - REDIS_URL
    
  file-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: prebuild
      args:
        workspace: file-server
    command: npx turbo run dev --filter=file-server
    ports:
      - ${FILE_SERVER_PORT}:80
    restart: always
    volumes:
      - ./packages/@lute:/app/packages/@lute
      - ./apps/file-server:/app/apps/file-server
    environment:
      - ENV
      - LOCAL_BUCKET_PATH
      - REDIS_URL
      - FILE_TTL_SECONDS
      - MONGO_URL
      - SPACES_KEY
      - SPACES_SECRET
      - SPACES_BUCKET

  profile-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: prebuild
      args:
        workspace: profile-server
    command: npx turbo run dev --filter=profile-server
    ports:
      - ${PROFILE_SERVER_PORT}:80
    restart: always
    volumes:
      - ./packages/@lute:/app/packages/@lute
      - ./apps/profile-server:/app/apps/profile-server
    environment:
      - ENV
      - RYM_DATA_SERVER_URL
      - CRAWLER_SERVER_URL
      - CATALOG_SERVER_URL
      - RYM_LOOKUP_SERVER_URL
      - MONGO_URL
      - MONGO_DB_NAME

  rym-data-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: prebuild
      args:
        workspace: rym-data-server
    command: npx turbo run dev --filter=rym-data-server
    ports:
      - ${RYM_DATA_SERVER_PORT}:80
    restart: always
    volumes:
      - ./packages/@lute:/app/packages/@lute
      - ./apps/rym-data-server:/app/apps/rym-data-server
    environment:
      - ENV
      - MONGO_URL
      - MONGO_DB_NAME

  rym-lookup-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: prebuild
      args:
        workspace: rym-lookup-server
    command: npx turbo run dev --filter=rym-lookup-server
    ports:
      - ${RYM_LOOKUP_SERVER_PORT}:80
    restart: always
    volumes:
      - ./packages/@lute:/app/packages/@lute
      - ./apps/rym-lookup-server:/app/apps/rym-lookup-server
    environment:
      - ENV
      - MONGO_URL
      - CRAWLER_SERVER_URL
      - REDIS_URL
  
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
      target: prebuild
      args:
        workspace: dashboard
    command: npx turbo run dev --filter=dashboard
    ports:
      - ${DASHBOARD_PORT}:80
    restart: always
    volumes:
      - ./packages/@lute:/app/packages/@lute
      - ./apps/dashboard:/app/apps/dashboard
    environment:
      - ENV
      - CRAWLER_SERVER_URL
      - PROFILE_SERVER_URL
      - CATALOG_SERVER_URL
      - NEXT_PUBLIC_PROFILE_SERVER_URL
      - REDIS_URL
      - PORT=80