version: '3'

services:
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    build: ./prometheus
    volumes:
      - /prometheus/.data:/prometheus
    environment:
      - ENV
      - PROM_NODE_EXPORTER_TARGET
      - PROM_LUTE_TARGET
      - PROM_REMOTE_WRITE_HOST
      - PROM_REMOTE_WRITE_USERNAME
      - PROM_REMOTE_WRITE_PASSWORD
    ports:
     - 9090:9090
    links:
      - "node-exporter:node-exporter-dev"
      - "lute:lute-dev"
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    logging:
      driver: "none"

  mongodb:
    image: 'bitnami/mongodb:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 27017:27017
    logging:
      driver: "none"

  lute:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        workspace: lute
    command: npx turbo run dev --filter=lute
    ports:
      - ${SERVER_PORT}:80
    restart: always
    volumes:
      - ./packages:/app/packages
      - ./apps/lute:/app/apps/lute
    env_file:
      - .env

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        workspace: dashboard
    command: npx turbo run dev --filter=dashboard
    ports:
      - ${DASHBOARD_PORT}:80
    restart: always
    env_file:
      - .env
    environment:
      - PORT=80