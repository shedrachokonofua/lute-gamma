version: '3'

services:
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
  
  grafana:
    image: grafana/grafana:latest
    ports:
      - 4002:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki

  promtail:
    image: grafana/promtail:latest
    volumes:
      - promtail-data:/var/logs
      - /var/log:/var/log
      - ./promtail/config.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
      
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    logging:
      driver: "none"

  mongodb:
    image: 'bitnami/mongodb:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 27017:27017
    logging:
      driver: "none"

  lute:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        workspace: lute
    command: npx turbo run dev --filter=lute
    ports:
      - ${SERVER_PORT}:80
    restart: always
    volumes:
      - ./packages:/app/packages
      - ./apps/lute:/app/apps/lute
    environment:
      - ENV
      - SPOTIFY_CLIENT_ID
      - SPOTIFY_CLIENT_SECRET
      - PROXY_HOST
      - PROXY_PORT
      - PROXY_USERNAME
      - PROXY_PASSWORD
      - SPACES_KEY
      - SPACES_SECRET
      - SPACES_BUCKET
      - LOKI_HOST
      - LOKI_USERNAME
      - LOKI_PASSWORD
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        workspace: dashboard
    command: npx turbo run dev --filter=dashboard
    ports:
      - ${DASHBOARD_PORT}:80
    restart: always
    environment:
      - PORT=80
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"

volumes:
  grafana-data:
  loki-data:
  promtail-data:
  prometheus-data: